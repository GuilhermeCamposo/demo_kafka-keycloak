- name: Get Streams certificate
  ansible.builtin.shell: oc extract -n {{ demo_project }} secret/my-cluster-cluster-ca-cert --keys ca.crt --to {{ output_dir }}/
  retries: 20
  delay: 15
  register: my_output
  changed_when: my_output.rc != 0
  args:
    executable: /bin/bash

- name: Import Streams certificate to truststore
  ansible.builtin.shell: |
    keytool -keystore {{ output_dir }}/truststore.p12 -storetype pkcs12 -alias my-cluster-kafka \
    -storepass {{ truststore_password }} -import -file {{ output_dir }}/ca.crt -noprompt
  retries: 20
  delay: 15
  register: my_output
  changed_when: my_output.rc != 0
  args:
    executable: /bin/bash

- name: Import Keycloak certificate to truststore
  ansible.builtin.shell: |
       keytool -keystore {{ output_dir }}/truststore.p12 -storetype pkcs12 \
       -alias kc -storepass {{ truststore_password }} -import -file {{ output_dir }}/kc.crt -noprompt
  retries: 20
  delay: 15
  register: my_output
  changed_when: my_output.rc != 0
  args:
    executable: /bin/bash

- name: Check store secret
  kubernetes.core.k8s:
    api_key: '{{ token }}'
    host: '{{ server }}'
    validate_certs: '{{ verify_tls }}'
    state: absent
    kind: Secret
    name: "client-truststore"
    namespace: '{{ demo_project }}'
    api_version: v1

- name: Create certificate secret for apps
  ansible.builtin.shell: oc create secret generic client-truststore --from-file={{ output_dir }}/truststore.p12  -n {{ demo_project }}
  retries: 20
  delay: 15
  register: my_output
  changed_when: my_output.rc != 0
  args:
    executable: /bin/bash

- name: Evaluate App ConfigMap
  kubernetes.core.k8s:
    state: present
    resource_definition: "{{ lookup('template', 'app-cm.yaml.j2') }}"
