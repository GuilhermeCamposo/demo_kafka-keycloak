apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: broker-controller
  namespace: '{{ demo_project }}'
  labels:
    strimzi.io/cluster: my-cluster
spec:
  replicas: 1
  roles:
    - controller
    - broker
  storage:
    type: jbod
    volumes:
      - id: 0
        type: ephemeral
        kraftMetadata: shared
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  namespace: '{{ demo_project }}'
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    version: 3.8.0
    listeners:
      - name: tls
        port: 9093
        type: internal
        tls: true
        authentication:
          type: oauth
          validIssuerUri: https://{{ kc_host }}/realms/{{ kafka_keycloak_realm }}
          jwksEndpointUri: https://{{ kc_host }}/realms/{{ kafka_keycloak_realm }}/protocol/openid-connect/certs
          userNameClaim: preferred_username
          maxSecondsWithoutReauthentication: 3600
          tlsTrustedCertificates:
            - secretName: oauth-server-cert
              certificate: kc.crt
      # - name: external
      #   port: 9093
      #   type: route
      #   tls: true
      #   authentication:
      #     type: oauth
      #     validIssuerUri: https://{{ kc_host }}/realms/{{ kafka_keycloak_realm }}
      #     jwksEndpointUri: https://{{ kc_host }}/realms/{{ kafka_keycloak_realm }}/protocol/openid-connect/certs
      #     userNameClaim: preferred_username
      #     maxSecondsWithoutReauthentication: 3600
      #     tlsTrustedCertificates:
      #       - secretName: oauth-server-cert
      #         certificate: kc.crt
    authorization:
      type: keycloak
      clientId: kafka
      tokenEndpointUri: https://{{ kc_host }}/realms/{{ kafka_keycloak_realm }}/protocol/openid-connect/token
      tlsTrustedCertificates:
        - secretName: oauth-server-cert
          certificate: kc.crt
      delegateToKafkaAcls: true
      superUsers:
        - User:service-account-kafka
    logging:
      type: inline
      loggers:
        log4j.logger.io.strimzi: "TRACE"
        log4j.logger.kafka: "INFO"
        log4j.logger.org.apache.kafka: "INFO"
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      min.insync.replicas: 1
  entityOperator:
    topicOperator: {}
    userOperator: {}
